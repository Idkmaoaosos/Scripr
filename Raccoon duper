local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Rin",
   Icon = 0,
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ShowText = "Rin's hub",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local connections = {} -- Store CharacterAdded connections

-- Add red highlight
local function applyHighlight(character)
	if not character:FindFirstChild("RedHighlight") then
		local highlight = Instance.new("Highlight")
		highlight.Name = "RedHighlight"
		highlight.FillColor = Color3.new(1, 0, 0)
		highlight.OutlineColor = Color3.new(0, 0, 0)
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		highlight.Parent = character
	end
end

-- Remove red highlight
local function removeHighlight(character)
	local h = character:FindFirstChild("RedHighlight")
	if h then
		h:Destroy()
	end
end

-- Enable/Disable function
local function setHighlightEnabled(enabled)
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			if player.Character then
				if enabled then
					applyHighlight(player.Character)
				else
					removeHighlight(player.Character)
				end
			end

			if enabled then
				-- Store the connection to disconnect later
				connections[player] = player.CharacterAdded:Connect(function(char)
					applyHighlight(char)
				end)
			else
				if connections[player] then
					connections[player]:Disconnect()
					connections[player] = nil
				end
			end
		end
	end

	-- Listen to future players
	if enabled and not connections["_playerAdded"] then
		connections["_playerAdded"] = Players.PlayerAdded:Connect(function(player)
			if player ~= LocalPlayer then
				connections[player] = player.CharacterAdded:Connect(function(char)
					applyHighlight(char)
				end)
			end
		end)
	elseif not enabled and connections["_playerAdded"] then
		connections["_playerAdded"]:Disconnect()
		connections["_playerAdded"] = nil
	end
end

local Tab = Window:CreateTab("Universal", 4483362458)

local Toggle = Tab:CreateToggle({
   Name = "Highlight",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
      setHighlightEnabled(Value)
   end,
})
